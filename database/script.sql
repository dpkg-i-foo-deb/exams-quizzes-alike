-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.tema
(
    codigo_tema integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    descripcion character varying NOT NULL,
    codigo_unidad integer NOT NULL,
    PRIMARY KEY (codigo_tema)
);

CREATE TABLE IF NOT EXISTS public.unidad
(
    codigo_unidad integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    descripcion character varying NOT NULL,
    codigo_plan integer NOT NULL,
    PRIMARY KEY (codigo_unidad)
);

CREATE TABLE IF NOT EXISTS public.plan_estudio
(
    codigo_plan integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    descripcion character varying NOT NULL,
    PRIMARY KEY (codigo_plan)
);

CREATE TABLE IF NOT EXISTS public.espacio_academico
(
    codigo_espacio integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    descripcion character varying[] NOT NULL,
    codigo_plan integer NOT NULL,
    PRIMARY KEY (codigo_espacio),
    CONSTRAINT plan_estudio_unique UNIQUE (codigo_plan)
);

CREATE TABLE IF NOT EXISTS public.curso
(
    codigo_curso integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    descripcion character varying NOT NULL,
    codigo_espacio integer NOT NULL,
    PRIMARY KEY (codigo_curso)
);

CREATE TABLE IF NOT EXISTS public.horario
(
    aula character varying,
    dia character varying,
    hora_inicio character varying,
    hora_fin character varying,
    codigo_curso integer,
    PRIMARY KEY (aula, dia, hora_inicio, hora_fin, codigo_curso)
);

CREATE TABLE IF NOT EXISTS public.persona
(
    login character varying,
    password character varying NOT NULL,
    nombre character varying NOT NULL,
    PRIMARY KEY (login)
);

CREATE TABLE IF NOT EXISTS public.administrador
(
    login_persona character varying NOT NULL
);

CREATE TABLE IF NOT EXISTS public.estudiante
(
    login_persona character varying NOT NULL,
    codigo_estudiante integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    PRIMARY KEY (codigo_estudiante)
);

CREATE TABLE IF NOT EXISTS public.docente
(
    login_persona character varying NOT NULL
);

CREATE TABLE IF NOT EXISTS public.curso_estudiante
(
    codigo_estudiante integer,
    codigo_curso integer,
    PRIMARY KEY (codigo_estudiante, codigo_curso)
);

COMMENT ON TABLE public.curso_estudiante
    IS 'Utilizado para representar la matr√≠cula de un estudiante a un curso';

ALTER TABLE IF EXISTS public.tema
    ADD CONSTRAINT unidad_fk FOREIGN KEY (codigo_unidad)
    REFERENCES public.unidad (codigo_unidad) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.unidad
    ADD CONSTRAINT plan_estudio_fk FOREIGN KEY (codigo_plan)
    REFERENCES public.plan_estudio (codigo_plan) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.espacio_academico
    ADD CONSTRAINT codigo_plan_fk FOREIGN KEY (codigo_plan)
    REFERENCES public.plan_estudio (codigo_plan) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.curso
    ADD CONSTRAINT espacio_academico_fk FOREIGN KEY (codigo_espacio)
    REFERENCES public.espacio_academico (codigo_espacio) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.horario
    ADD CONSTRAINT curso_fk FOREIGN KEY (codigo_curso)
    REFERENCES public.curso (codigo_curso) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.administrador
    ADD CONSTRAINT login_persona_fk FOREIGN KEY (login_persona)
    REFERENCES public.persona (login) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.estudiante
    ADD CONSTRAINT login_persona_fk FOREIGN KEY (login_persona)
    REFERENCES public.persona (login) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.docente
    ADD CONSTRAINT login_persona_fk FOREIGN KEY (login_persona)
    REFERENCES public.persona (login) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.curso_estudiante
    ADD CONSTRAINT estudiante_fk FOREIGN KEY (codigo_estudiante)
    REFERENCES public.estudiante (codigo_estudiante) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.curso_estudiante
    ADD CONSTRAINT curso_fk FOREIGN KEY (codigo_curso)
    REFERENCES public.curso (codigo_curso) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;